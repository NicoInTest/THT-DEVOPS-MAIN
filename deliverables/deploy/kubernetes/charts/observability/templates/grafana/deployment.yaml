apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.grafana.name }}
  namespace: {{ .Values.namespaces.observability }}
  labels:
    app: {{ .Values.grafana.name }}
    {{- if .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.grafana.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.grafana.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.grafana.service.port }}"
    spec:
      containers:
      - name: {{ .Values.grafana.name }}
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.grafana.service.port }}
          name: http-grafana
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.grafana.service.port }}
        resources:
          requests:
            cpu: {{ .Values.grafana.resources.requests.cpu }}
            memory: {{ .Values.grafana.resources.requests.memory }}
          limits:
            cpu: {{ .Values.grafana.resources.limits.cpu }}
            memory: {{ .Values.grafana.resources.limits.memory }}
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD_MUST_CHANGE
          value: "true"
        - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
          value: {{ .Values.grafana.allowUnsignedPlugins | quote }}
        - name: GF_INSTALL_PLUGINS
          value: {{ .Values.grafana.plugins | quote }}
        - name: GF_FEATURE_TOGGLES_ENABLE
          value: "tempoSearch,tempoBackendSearch,tempoServiceGraph,lokiMetricDataSource,prometheusDataSource"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "false"
        - name: GF_LOG_LEVEL
          value: "debug"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
        - name: grafana-dashboards-provider
          mountPath: /etc/grafana/provisioning/dashboards/provider.yaml
          subPath: provider.yaml
          readOnly: true
        - name: grafana-system-metrics
          mountPath: /var/lib/grafana/dashboards/system
          readOnly: true
        - name: grafana-order-app-metrics
          mountPath: /var/lib/grafana/dashboards/application
          readOnly: true
        - name: grafana-application-logs
          mountPath: /var/lib/grafana/dashboards/application/logs
          readOnly: true
        - name: grafana-dynamodb-metrics
          mountPath: /var/lib/grafana/dashboards/database
          readOnly: true
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-provider
        configMap:
          name: grafana-dashboards-provider
      - name: grafana-system-metrics
        configMap:
          name: grafana-system-metrics
      - name: grafana-order-app-metrics
        configMap:
          name: grafana-order-app-metrics
      - name: grafana-application-logs
        configMap:
          name: grafana-application-logs
      - name: grafana-dynamodb-metrics
        configMap:
          name: grafana-dynamodb-metrics 